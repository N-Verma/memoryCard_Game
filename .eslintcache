[{"G:\\Projects\\cardgame\\src\\App.js":"1","G:\\Projects\\cardgame\\src\\components\\Landing\\landing.js":"2","G:\\Projects\\cardgame\\src\\reportWebVitals.js":"3","G:\\Projects\\cardgame\\src\\index.js":"4","G:\\Projects\\cardgame\\src\\components\\Game\\game.js":"5","G:\\Projects\\cardgame\\src\\components\\constants\\data.js":"6","G:\\Projects\\cardgame\\src\\components\\Timer\\timer.js":"7","G:\\Projects\\cardgame\\src\\components\\Redux\\Reducer\\scoreReducer.js":"8"},{"size":801,"mtime":1607137908021,"results":"9","hashOfConfig":"10"},{"size":2371,"mtime":1607149922763,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"10"},{"size":504,"mtime":1607135241095,"results":"13","hashOfConfig":"10"},{"size":4186,"mtime":1607138802509,"results":"14","hashOfConfig":"10"},{"size":1158,"mtime":1606998258025,"results":"15","hashOfConfig":"10"},{"size":1598,"mtime":1607149958371,"results":"16","hashOfConfig":"10"},{"size":409,"mtime":1607133592289,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"164s8wt",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"27"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"G:\\Projects\\cardgame\\src\\App.js",[],"G:\\Projects\\cardgame\\src\\components\\Landing\\landing.js",[],"G:\\Projects\\cardgame\\src\\reportWebVitals.js",[],["37","38"],"G:\\Projects\\cardgame\\src\\index.js",[],["39","40"],"G:\\Projects\\cardgame\\src\\components\\Game\\game.js",["41","42"],"import React,{useEffect, useState} from 'react'\r\nimport './game.css'\r\nimport {useHistory} from 'react-router-dom'\r\nimport {Timer} from '../Timer/timer'\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\n//import {faShip,faAddressBook,faCalculator,faCoffee,faBomb,faSkull,faTrain,faDrum,faBriefcase,faTree} from '@fortawesome/free-solid-svg-icons'\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport 'react-confirm-alert/src/react-confirm-alert.css';\r\nimport { eiconarr, escore, ewidth, hiconarr, hscore, hwidth, miconarr, mscore, mwidth } from '../constants/data'\r\n\r\nexport const Game=(props)=>{\r\n\r\n    const [iconarr, setIconarr] = useState([]);\r\n    const [tscore,setTscore] = useState();\r\n    const [curr,setCurr] = useState([])\r\n    let history = useHistory();\r\n    const [score,setScore] = useState(0);\r\n    const rotate=(event)=>{\r\n        var par = document.getElementById(event.currentTarget.id);\r\n        var child = par.children[0];\r\n        setCurr([...curr,par])\r\n        child.style.transform = \"rotateY(180deg)\";\r\n        setTimeout(()=>{child.style.transform = \"rotateY(0deg)\";},3000)\r\n    }\r\n    useEffect(()=>{\r\n        switch(parseInt(props.match.params.id)){\r\n            case 1:\r\n                setIconarr(eiconarr)\r\n                setTscore(escore)\r\n                document.querySelector(\".board\").style.width=ewidth\r\n                break;\r\n            case 2:\r\n                setIconarr(miconarr)\r\n                setTscore(mscore)\r\n                document.querySelector(\".board\").style.width=mwidth\r\n                break;\r\n            case 3:\r\n                setIconarr(hiconarr)\r\n                setTscore(hscore)\r\n                document.querySelector(\".board\").style.width=hwidth\r\n                break;\r\n        }\r\n        if(curr.length===2){\r\n            if((curr[0].children[0].children[1].id===curr[1].children[0].children[1].id)&&(curr[0].id!==curr[1].id)){\r\n                var c1 = curr[0].children[0];\r\n                var c2 = curr[1].children[0];\r\n                \r\n                setScore(score+1)\r\n                \r\n                setTimeout(()=>{\r\n                    c1.style.display=\"none\"\r\n                    c2.style.display=\"none\"\r\n                    curr[0].style.zIndex=\"-1\"\r\n                    curr[1].style.zIndex=\"-1\"\r\n                },1000)\r\n                \r\n                setCurr([])\r\n            }else{\r\n                setCurr([])\r\n                var nc1 = curr[0].children[0];\r\n                var nc2 = curr[1].children[0];\r\n                \r\n                setTimeout(()=>{\r\n                    nc1.style.transform=\"rotateY(0deg)\"\r\n                    nc2.style.transform=\"rotateY(0deg)\"\r\n                },1000)\r\n            }\r\n        }\r\n    },[curr])\r\n\r\n    \r\n    if(score===tscore){\r\n        confirmAlert({\r\n            message: 'Congrats You Won !!!!!',\r\n            buttons: [\r\n              {\r\n                label: 'Return',\r\n                onClick: () => {\r\n                        history.push(\"/\");\r\n                        localStorage.setItem('win',parseInt(localStorage.getItem('win'))+1);\r\n                        \r\n                    }\r\n              },\r\n              \r\n            ]\r\n          });\r\n    }\r\n    //console.log(\"here\")\r\n    //\r\n    // var bool = true;\r\n    // console.log(bool)\r\n    // if(bool){\r\n    //     shuffle(iconarr);\r\n    //     bool=false\r\n    //     console.log(bool)\r\n    // }\r\n    return(\r\n        <div>\r\n            <Timer sc={score} tsc={tscore} id={props.match.params.id}/>\r\n        <div class=\"container\">\r\n        \r\n        <div class=\"board\">\r\n            {(iconarr).map((icon,index)=>{\r\n                return(\r\n                <div key={index} id={`in${index}`} onClick={rotate} class=\"card\" >\r\n                    <div class=\"inner\">\r\n                        <div class=\"gfront\">\r\n                        </div>\r\n                        <div class=\"gback\" id={icon.iconName}>\r\n                            <FontAwesomeIcon icon={icon} class=\"icon\"/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                )\r\n            })}\r\n            </div>\r\n        </div>\r\n        </div>\r\n    )\r\n}","G:\\Projects\\cardgame\\src\\components\\constants\\data.js",[],"G:\\Projects\\cardgame\\src\\components\\Timer\\timer.js",["43","44"],"G:\\Projects\\cardgame\\src\\components\\Redux\\Reducer\\scoreReducer.js",[],{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"45","replacedBy":"49"},{"ruleId":"47","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":26,"column":9,"nodeType":"53","messageId":"54","endLine":42,"endColumn":10},{"ruleId":"55","severity":1,"message":"56","line":69,"column":7,"nodeType":"57","endLine":69,"endColumn":13,"suggestions":"58"},{"ruleId":"55","severity":1,"message":"59","line":13,"column":15,"nodeType":"60","endLine":13,"endColumn":63},{"ruleId":"55","severity":1,"message":"61","line":16,"column":13,"nodeType":"62","endLine":16,"endColumn":23},"no-native-reassign",["63"],"no-negated-in-lhs",["64"],["63"],["64"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'props.match.params.id' and 'score'. Either include them or remove the dependency array. You can also do a functional update 'setScore(s => ...)' if you only need 'score' in the 'setScore' call.","ArrayExpression",["65"],"Assignments to the 'timer' variable from inside React Hook React.useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside React.useEffect.","CallExpression","Assignments to the 'res' variable from inside React Hook React.useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside React.useEffect.","BinaryExpression","no-global-assign","no-unsafe-negation",{"desc":"66","fix":"67"},"Update the dependencies array to be: [curr, props.match.params.id, score]",{"range":"68","text":"69"},[2746,2752],"[curr, props.match.params.id, score]"]